package com.satoripop.loyalityapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LoyaltyLevelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyLevelAllPropertiesEquals(LoyaltyLevel expected, LoyaltyLevel actual) {
        assertLoyaltyLevelAutoGeneratedPropertiesEquals(expected, actual);
        assertLoyaltyLevelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyLevelAllUpdatablePropertiesEquals(LoyaltyLevel expected, LoyaltyLevel actual) {
        assertLoyaltyLevelUpdatableFieldsEquals(expected, actual);
        assertLoyaltyLevelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyLevelAutoGeneratedPropertiesEquals(LoyaltyLevel expected, LoyaltyLevel actual) {
        assertThat(expected)
            .as("Verify LoyaltyLevel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyLevelUpdatableFieldsEquals(LoyaltyLevel expected, LoyaltyLevel actual) {
        assertThat(expected)
            .as("Verify LoyaltyLevel relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getMinBalance()).as("check minBalance").isEqualTo(actual.getMinBalance()))
            .satisfies(e -> assertThat(e.getMaxBalance()).as("check maxBalance").isEqualTo(actual.getMaxBalance()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoyaltyLevelUpdatableRelationshipsEquals(LoyaltyLevel expected, LoyaltyLevel actual) {
        assertThat(expected)
            .as("Verify LoyaltyLevel relationships")
            .satisfies(e -> assertThat(e.getOffers()).as("check offers").isEqualTo(actual.getOffers()))
            .satisfies(e -> assertThat(e.getRewards()).as("check rewards").isEqualTo(actual.getRewards()));
    }
}

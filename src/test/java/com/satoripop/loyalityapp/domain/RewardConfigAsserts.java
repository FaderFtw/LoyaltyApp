package com.satoripop.loyalityapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RewardConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardConfigAllPropertiesEquals(RewardConfig expected, RewardConfig actual) {
        assertRewardConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertRewardConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardConfigAllUpdatablePropertiesEquals(RewardConfig expected, RewardConfig actual) {
        assertRewardConfigUpdatableFieldsEquals(expected, actual);
        assertRewardConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardConfigAutoGeneratedPropertiesEquals(RewardConfig expected, RewardConfig actual) {
        assertThat(expected)
            .as("Verify RewardConfig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardConfigUpdatableFieldsEquals(RewardConfig expected, RewardConfig actual) {
        assertThat(expected)
            .as("Verify RewardConfig relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getBalanceValue()).as("check balanceValue").isEqualTo(actual.getBalanceValue()))
            .satisfies(e -> assertThat(e.getConvertedValue()).as("check convertedValue").isEqualTo(actual.getConvertedValue()))
            .satisfies(e -> assertThat(e.getDaysToExpire()).as("check daysToExpire").isEqualTo(actual.getDaysToExpire()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRewardConfigUpdatableRelationshipsEquals(RewardConfig expected, RewardConfig actual) {
        assertThat(expected)
            .as("Verify RewardConfig relationships")
            .satisfies(e -> assertThat(e.getLoyaltyLevels()).as("check loyaltyLevels").isEqualTo(actual.getLoyaltyLevels()));
    }
}
